// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model IConversation {
  id    String     @id @default(uuid())
  title String 
  createdAt DateTime @default(now())
  updatedAt DateTime? @updatedAt
  messages IMessage[]
  settings IConversationModelSettings @relation(fields: [settingsId], references: [id])
  settingsId String @unique

}

model IMessage {
  id    String     @id @default(uuid())
  isGenerating Boolean @default(false)
  sender SENDER @default(user)
  content String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  conversation    IConversation?    @relation(fields: [conversationId], references: [id])
  conversationId    String?
  isError Boolean @default(false)
  interrupted Boolean @default(false)
}

model IConversationModelSettings {
  id    String     @id @default(uuid())
  provider String @default("openai")
  model String @default("gpt-3.5-turbo")
  temperature Float @default(0.7)
  topP Float @default(1)
  maxTokens Int @default(4000)
  presencePenalty Float @default(0)
  frequencyPenalty Float @default(0)
  conversation IConversation?
}


enum SENDER {
  user
  assistant
  system
}
